<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GestVAE"
        xmlns:localVM="clr-namespace:GestVAE.VM"
        xmlns:GestVAEcls="clr-namespace:GestVAEcls;assembly=GestVAEcls" xmlns:VM="clr-namespace:GestVAE.VM" xmlns:SampleDataSource="clr-namespace:Expression.Blend.SampleData.SampleDataSource" 
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" x:Name="window" x:Class="GestVAE.frmLivret1" 
        mc:Ignorable="d"
        Title="Gestion du Livret 1" Icon="IMG/LivretN.ico" Unloaded="window_Unloaded" Width="1200" Height="827" DataContextChanged="Window_DataContextChanged">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:EnumToBoleanConverter x:Key="EnumToBoleanConverter"/>

        <Image x:Key="AddIco" Source="IMG/Add.png"/>

    </Window.Resources>
    <ScrollViewer Margin="0,10,0,0">
        <Grid x:Name ="grdLivret" DataContext="{Binding CurrentCandidat.CurrentLivret}"  Margin="10" RenderTransformOrigin="0.496,0.542">
            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFD1EEF9" Offset="0"/>
                    <GradientStop Color="#FF47565B" Offset="1"/>
                </LinearGradientBrush>
            </Grid.Background>
            <Grid.RowDefinitions>
                <!--Type-->
                <RowDefinition Height="Auto"/>
                <!-- généralité -->
                <RowDefinition Height="Auto"/>
                <!--Tab contol-->
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <!-- Bouttons -->
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock Text="LIVRET1" Grid.Row="0" FontSize="36" HorizontalAlignment="Center" Margin="514,0" >
                <TextBlock.Foreground>
                    <SolidColorBrush Color="#FF0078D7"/>
                </TextBlock.Foreground>
            </TextBlock>
            <Grid Grid.Row="1"  >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid x:Name="grdEntete2"  Grid.Row="0" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="28*"/>
                        <RowDefinition Height="29*"/>
                        <RowDefinition Height="27*"/>
                        <RowDefinition Height="28*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Label Content="Numéro Livret :" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"/>
                    <TextBox x:Name="tbNumLivret"  Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" IsEnabled="{Binding IsLivretModifiable}" Style="{DynamicResource TextBoxReadOnlyStyle}"/>
                    <Label Content="Etat Livret :" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"/>
                    <ComboBox x:Name="cbxEtatLivret" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" IsEnabled="{Binding IsLivretModifiable}" Style="{DynamicResource ComboboxReadOnlyStyle}" Margin="0,5,10,6"/>
                    <Label Content="Livret clôturé :" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"/>
                    <CheckBox x:Name="ckIsClos" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="80,6,80,4" IsEnabled="{Binding IsLivretModifiable}">
                        <CheckBox.InputBindings>
                            <MouseBinding MouseAction="RightClick" Command="{Binding VM.DecloturerLivretCommand, ElementName=window}" />
                        </CheckBox.InputBindings>
                    </CheckBox>
                    <Label Content="Diplome :" Grid.Row="3" Grid.Column="0" VerticalAlignment="Center"/>
                    <TextBox x:Name="tbDiplome" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsEnabled="{Binding IsLivretModifiable}"
                         Text="{Binding NomDiplome,Mode=OneWay}" Style="{DynamicResource TextBoxReadOnlyStyle}"/>
                    <DataGrid x:Name="dgDCLivret"  Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2"
                           ItemsSource="{Binding lstDCLivret, UpdateSourceTrigger=PropertyChanged}" 
                            AutoGenerateColumns="False" SelectionMode="Single" CanUserResizeColumns="True" CanUserReorderColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserAddRows="False"  Margin="10" RowHeaderWidth="0" HorizontalAlignment="Stretch" 
                           Style="{DynamicResource MyDataGridStyle}">
                        <DataGrid.Resources>
                            <VM:BindingProxy x:Key="proxy" Data="{Binding VM.CurrentCandidat.CurrentLivret, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:frmLivret1}}}" />
                        </DataGrid.Resources>

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Nom" Binding="{Binding NomDC}" Width="2*" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Décision" Binding="{Binding Decision}" Width="3*" IsReadOnly="True"/>
                            <DataGridCheckBoxColumn Header="Bloc demandé" Binding="{Binding IsAValider}" Width="2*"/>
                        </DataGrid.Columns>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsDecisionFavorable}" Value="true">
                                        <Setter Property="Background" Value="Green"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsAValider}" Value="false">
                                        <Setter Property="Background" Value="Gray"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                    </DataGrid>



                </Grid>
                <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="1" 
                        IsEnabled="{Binding IsLivretModifiable}" >
                    <StackPanel Orientation="Horizontal" >
                        <Label Content="Date demande candidat :" Width="200" VerticalAlignment="Center"/>
                        <DatePicker x:Name="dtpDateDemande" 
                            SelectedDate="{Binding DateDemande}" 
                            Width="100" Margin="5" >
                            <DatePicker.BlackoutDates>
                                <CalendarDateRange Start="2080-01-01"/>
                            </DatePicker.BlackoutDates>

                        </DatePicker>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsEtatEnvoye, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0">
                        <Label Content="Date envoi EHESP : " Width="200" VerticalAlignment="Center" />
                        <DatePicker x:Name="dtpenvoiEHESP" SelectedDate="{Binding DateEnvoiEHESP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" Height="29" DisplayDateStart="{Binding SelectedDate, ElementName=dtpDateDemande}" 
                         Margin="5">
                            <DatePicker.BlackoutDates>
                                <CalendarDateRange Start="2080-01-01"/>
                            </DatePicker.BlackoutDates>

                        </DatePicker>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsEtatRecu, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Label Content="Date réception pièces manquantes : " Width="200" VerticalAlignment="Center" />
                        <DatePicker x:Name="dtpReceptPM" SelectedDate="{Binding DateReceptionPiecesManquantes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" Height="29"  DisplayDateStart="{Binding SelectedDate, ElementName=dtpDateDemande}" 
                                Margin="5">
                            <DatePicker.BlackoutDates>
                                <CalendarDateRange Start="2080-01-01"/>
                            </DatePicker.BlackoutDates>

                        </DatePicker>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsEtatAccepte, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Label Content="Date envoi Livret2 : " Width="200" VerticalAlignment="Center" />
                        <DatePicker x:Name="dtpenvoiL2" SelectedDate="{Binding DateEnvoiL2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" Height="29"  DisplayDateStart="{Binding SelectedDate, ElementName=dtpDateDemande}" Margin="5" 
                                >
                            <DatePicker.BlackoutDates>
                                <CalendarDateRange Start="2080-01-01"/>
                            </DatePicker.BlackoutDates>

                        </DatePicker>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsEtatEnvoye, Converter={StaticResource BooleanToVisibilityConverter}}"/>


                </StackPanel>
                <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="2" 
                        IsEnabled="{Binding IsLivretModifiable}" >
                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsEtatRecu, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Label Content="Date réception : " Width="160" VerticalAlignment="Center" />
                        <DatePicker x:Name="dtpReceptEHESP"  SelectedDate="{Binding DateReceptEHESP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" Height="29" IsEnabled="{Binding IsLivretModifiable}" DisplayDateStart="{Binding SelectedDate, ElementName=dtpenvoiEHESP}" Margin="5">
                            <DatePicker.BlackoutDates>
                                <CalendarDateRange Start="2080-01-01"/>
                            </DatePicker.BlackoutDates>

                        </DatePicker>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsEtatRecuComplet, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Label Content="Date courrier complétude :" Width="160" VerticalAlignment="Center" />
                        <DatePicker x:Name="dtpReceptComplet"  SelectedDate="{Binding DateReceptEHESPComplet}" Width="100" Margin="5"  DisplayDateStart="{Binding SelectedDate, ElementName=dtpenvoiEHESP}">
                            <DatePicker.BlackoutDates>
                                <CalendarDateRange Start="2080-01-01"/>
                            </DatePicker.BlackoutDates>

                        </DatePicker>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsEtatAccepte, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Label Content="Date validité : "  Width="160"  VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                        <DatePicker x:Name="dtpValidite"     HorizontalAlignment="Left"
                            SelectedDate="{Binding DateValidite, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="29" Width="100" 
                            >
                            <DatePicker.BlackoutDates>
                                <CalendarDateRange Start="2080-01-01"/>
                            </DatePicker.BlackoutDates>

                        </DatePicker>
                    </StackPanel>
                </StackPanel>

            </Grid>

            <TabControl x:Name="TabL1" Grid.Row="2" 
                    
                    HorizontalAlignment="Stretch" Margin="10" Grid.RowSpan="2" >
                <TabItem x:Name="tabLivret" Header="Livret1" Margin="0">
                    <StackPanel Orientation="Vertical" IsEnabled="{Binding IsLivretModifiable}" Visibility="{Binding IsEtatRecu, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <UniformGrid Rows="1" >
                            <StackPanel Orientation="Horizontal" Grid.Column="0">
                                <RadioButton x:Name="rbcontrat" Content="Contrat" GroupName="ContratLivret" Margin="10" HorizontalAlignment="Right"/>
                                <RadioButton x:Name="rbconvention" Content="Convention"  GroupName="ContratLivret" Margin="10" HorizontalAlignment="Right"/>
                                <RadioButton x:Name="rbIsNonRecu" Content="Non Reçu"  GroupName="ContratLivret" Margin="10" HorizontalAlignment="Right"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Column="1">
                                <Label VerticalAlignment="Center">Enregistré  :</Label>
                                <CheckBox Margin="0" VerticalAlignment="Center" IsChecked="{Binding IsEnregistre}"></CheckBox>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Column="2">
                                <Label VerticalAlignment="Center">Payé  :</Label>
                                <CheckBox Margin="0" VerticalAlignment="Center" IsChecked="{Binding IsPaye}"></CheckBox>
                            </StackPanel>

                        </UniformGrid>
                        <Grid x:Name="grdTypeOrigine" >
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>

                            <Label Content="Type demande :" Grid.Row="0" Grid.Column="0"/>
                            <ComboBox x:Name="cbxTypeDemande" Grid.Row="0" Grid.Column="1" BorderThickness="1"
                          SelectedValue="{Binding TypeDemande}" 
                          ItemsSource="{Binding DataContext.lstParamTypeDemande, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:frmLivret1}}}"
                                  SelectedValuePath="Nom" DisplayMemberPath="Nom" Style="{DynamicResource ComboboxReadOnlyStyle}"/>

                            <Label Content="Vecteur d'information :" Grid.Row="0" Grid.Column="2"/>
                            <ComboBox x:Name="cbxVecteurInformation" Grid.Row="0" Grid.Column="3"
                          SelectedValue="{Binding VecteurInformation}" 
                          ItemsSource="{Binding VM.lstParamVecteurInformation, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:frmLivret1}}}"
                                  SelectedValuePath="Nom" DisplayMemberPath="Nom" Style="{DynamicResource ComboboxReadOnlyStyle}"/>

                        </Grid>


                        <Grid Name="grdPiecesJointes" Margin="10" 
                          Visibility="{Binding IsEtatRecu, Converter={StaticResource BooleanToVisibilityConverter}}"
>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20*"/>
                                <ColumnDefinition Width="40*"/>
                                <ColumnDefinition Width="40*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="62*"/>
                                <RowDefinition Height="62*"/>
                                <RowDefinition Height="126*"/>
                                <RowDefinition Height="25*"/>
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="0">
                                <Label Content="Pièces manquantes :" Foreground="#FF0078D7" FontWeight="Bold"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="0">
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Date 1er courrier pièces manquantes  :" VerticalAlignment="Center"/>
                                    <DatePicker Name="dtpDate1ereDemandePJ" SelectedDate="{Binding Date1ereDemandePieceManquantes}" DisplayDateStart="{Binding SelectedDate, ElementName=dtpReceptEHESP}" Margin="0">
                                        <DatePicker.BlackoutDates>
                                            <CalendarDateRange Start="2080-01-01"/>
                                        </DatePicker.BlackoutDates>

                                    </DatePicker>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Visibility="{Binding IsDate1ereDemandePieceManquantesNull,Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Label Content="Date 2nd courrier pièces manquantes :" VerticalAlignment="Center"/>
                                    <DatePicker Name="dtpDate2ndDemandePJ" SelectedDate="{Binding Date2emeDemandePieceManquantes}" DisplayDateStart="{Binding SelectedDate, ElementName=dtpReceptEHESP}" VerticalAlignment="Center" Margin="0">
                                        <DatePicker.BlackoutDates>
                                            <CalendarDateRange Start="2080-01-01"/>
                                        </DatePicker.BlackoutDates>

                                    </DatePicker>

                                </StackPanel>
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Grid.Column="2" Grid.Row="0" Visibility="{Binding IsDate1ereDemandePieceManquantesNull,Converter={StaticResource BooleanToVisibilityConverter}}" >
                                <StackPanel Orientation="Horizontal">
                                    <Label Name="lblDateRetourPM" Content="Date de retour demandée 1er courrier :" Width="230" VerticalAlignment="Center"/>
                                    <DatePicker Name="dtpDateRetourDemandePJ" SelectedDate="{Binding DateDemande1erRetour}" DisplayDateStart="{Binding SelectedDate, ElementName=dtpDate1ereDemandePJ}" Margin="0">
                                        <DatePicker.BlackoutDates>
                                            <CalendarDateRange Start="2080-01-01"/>
                                        </DatePicker.BlackoutDates>

                                    </DatePicker>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Name="lblDateReceptPM" Content="Date de retour demandée 2nd courrier :" Width="230" VerticalAlignment="Center"/>
                                    <DatePicker Name="dtpDateReceptPM" SelectedDate="{Binding DateDemande2emeRetour}" DisplayDateStart="{Binding SelectedDate, ElementName=dtpReceptComplet}" Margin="0">
                                        <DatePicker.BlackoutDates>
                                            <CalendarDateRange Start="2080-01-01"/>
                                        </DatePicker.BlackoutDates>

                                    </DatePicker>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="1">
                                <Label VerticalAlignment="Center">CNI OK :</Label>
                                <CheckBox Margin="0" VerticalAlignment="Center" IsChecked="{Binding IsCNIOK}"></CheckBox>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="1">
                                <Label VerticalAlignment="Center">Date de validité CNI :</Label>
                                <DatePicker Name="dtpDateValiditeCNI" SelectedDate="{Binding DateValiditeCNI}" VerticalAlignment="Center" Margin="0">
                                    <DatePicker.BlackoutDates>
                                        <CalendarDateRange Start="2080-01-01"/>
                                    </DatePicker.BlackoutDates>

                                </DatePicker>
                            </StackPanel>

                            <DataGrid x:Name="dgPiecesjointes" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3"
                                    ItemsSource="{Binding lstPieceJointeActif, UpdateSourceTrigger=PropertyChanged}" 
                                    SelectedItem="{Binding selectedPJ}"
                                    AutoGenerateColumns="False" SelectionMode="Single" CanUserResizeColumns="False" CanUserReorderColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserAddRows="False"
                                    Margin="10" RowHeaderWidth="0" 
                                    CellEditEnding="dgPiecesjointes_CellEditEnding" >
                                <DataGrid.InputBindings>
                                    <KeyBinding Key="Delete" Command="{Binding VM.DeletePJCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:frmLivret1}}}" />
                                </DataGrid.InputBindings>

                                <DataGrid.Columns>
                                    <DataGridTextColumn Width="3*" Header="Catégorie" Binding="{Binding Categorie}">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Width="10*" Header="Libellé" Binding="{Binding Libelle}">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <Setter Property="TextWrapping" Value="Wrap" />
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridCheckBoxColumn Header="Reçu"  Binding="{Binding IsRecu}" Width="1*"/>
                                </DataGrid.Columns>

                            </DataGrid>
                            <ComboBox Name="cbxCategoriePJ" HorizontalAlignment="Stretch" Margin="10" Grid.Row="3"
                            SelectedValue="{Binding CategoriePJ}" 
                            ItemsSource="{Binding lstCategoriePJ}"
                                  DisplayMemberPath="Categorie" Style="{DynamicResource ComboboxReadOnlyStyle}" SelectionChanged="CbxCategoriePJ_SelectionChanged"
                        />

                            <ComboBox Name="cbxLibellePJ" Grid.Column="1" HorizontalAlignment="Stretch" Margin="10" Grid.Row="3" 
                            SelectedValue="{Binding LibellePJ}" 
                            ItemsSource="{Binding lstLibellePJ}"
                                  Style="{DynamicResource ComboboxReadOnlyStyle}" SelectionChanged="CbxLibellePJ_SelectionChanged">
                                <ComboBox.ItemTemplate >
                                    <DataTemplate>
                                        <TextBlock TextWrapping="Wrap" Text="{Binding Libelle}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>

                            </ComboBox>


                            <Button x:Name="btnAddPJ" Grid.Row="3" Grid.Column="2" Margin="10"
                            Command="{Binding DataContext.AjoutePJL1Command, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:frmLivret1}}}"
                                    IsEnabled="{Binding DataContext.IsAjoutPJPossible , RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:frmLivret1}}}"
                            Content="Ajouter pièce jointe"
                            />
                        </Grid>

                    </StackPanel>
                </TabItem>
                <TabItem x:Name="tabJury" Header="Examen Recevabilité" 
                    Visibility="{Binding IsEtatRecuComplet, Converter={StaticResource BooleanToVisibilityConverter}}"
                     >
                    <Grid x:Name="grdJury1"  ShowGridLines="False" HorizontalAlignment="Stretch" IsEnabled="{Binding IsLivretModifiable}" Margin="0,0,0,-1" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto"  />
                            <RowDefinition Height="Auto"  />
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20*"/>
                            <ColumnDefinition Width="323*"/>
                            <ColumnDefinition Width="343*"/>
                            <ColumnDefinition Width="343*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Grid.ColumnSpan="3">
                            <Label Content="Date de recevabilité :" VerticalAlignment="Center"/>
                            <DatePicker x:Name="dtpDateJury" Margin="0" VerticalAlignment="Center" DisplayDateStart="{Binding SelectedDate, ElementName=dtpReceptComplet}" SelectedDate="{Binding DateJury}" >
                                <DatePicker.BlackoutDates>
                                    <CalendarDateRange Start="2080-01-01"/>
                                </DatePicker.BlackoutDates>
                            </DatePicker>
                            <Label Content="Décision:" VerticalAlignment="Center"/>
                            <TextBox x:Name="tbDecisionLivret" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsEnabled="{Binding IsLivretModifiable}"
                         Text="{Binding DecisionJury,Mode=OneWay}" Style="{DynamicResource TextBoxReadOnlyStyle}"/>


                        </StackPanel>
                        <DataGrid x:Name="dgDCLivretDecision"
                                    ItemsSource="{Binding lstDCLivretAValider}" 
                                    SelectedItem="{Binding selectedDCLivret}"
                                  Grid.Row="1"
                                  Grid.Column="0"
                                  Grid.ColumnSpan="4"
                                  AutoGenerateColumns="False" SelectionMode="Single" CanUserResizeColumns="False" CanUserReorderColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserAddRows="False" Margin="10,11,10,9" RowHeaderWidth="0" HorizontalAlignment="Stretch">
                            <DataGrid.Resources>
                                <VM:BindingProxy x:Key="proxy" Data="{Binding}" />
                            </DataGrid.Resources>

                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Nom" Binding="{Binding NomDC}" Width="1*"/>

                                <DataGridCheckBoxColumn x:Name="DCFavorable" Header="Favorable" IsThreeState="True" Binding="{Binding IsDecisionFavorable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <DataGridCheckBoxColumn.CellStyle>
                                        <Style>
                                            <EventSetter Event="CheckBox.Checked" Handler="OnDCDecisionChecked"/>
                                        </Style>
                                    </DataGridCheckBoxColumn.CellStyle>
                                </DataGridCheckBoxColumn>
                                <DataGridCheckBoxColumn x:Name="DCdefavorable" Header="Défavorable" IsThreeState="True" Binding="{Binding IsDecisionDefavorable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                    <DataGridCheckBoxColumn.CellStyle>
                                        <Style>
                                            <EventSetter Event="CheckBox.Checked" Handler="OnDCDecisionChecked"/>
                                        </Style>
                                    </DataGridCheckBoxColumn.CellStyle>
                                </DataGridCheckBoxColumn>
                                <!--
                                <DataGridTemplateColumn Header="Favorable">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox Name ="DCDecisionF" IsChecked="{Binding IsDecisionFavorable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" IsThreeState="True"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Défavorable">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox Name ="DCDecisionD" IsChecked="{Binding IsDecisionDefavorable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" IsThreeState="True"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                    -->
                                <!-- How to bind a ComboboxCol to another(https://blogs.msdn.microsoft.com/vinsibal/2008/12/17/wpf-datagrid-dynamically-updating-datagridcomboboxcolumn/) -->
                                <!--                            
                            <DataGridComboBoxColumn x:Name="dgColMotifGeneral" Header="Motif général" 
                                                        SelectedItemBinding="{Binding MotifGeneral, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        ItemsSource="{Binding Data.LstMotifGL2, Source={StaticResource proxy}}"
                                                        Width="1*"/>

                            <DataGridComboBoxColumn x:Name="dgColMotifDetaille" Header="Motif détail" 
                                                        SelectedItemBinding="{Binding MotifDetaille}" 
                                                        Width="1*">
                                <DataGridComboBoxColumn.ElementStyle>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="ItemsSource" Value="{Binding lstMotifDetaille}" />
                                    </Style>
                                </DataGridComboBoxColumn.ElementStyle>
                                <DataGridComboBoxColumn.EditingElementStyle>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="ItemsSource" Value="{Binding lstMotifDetaille}" />
                                    </Style>
                                </DataGridComboBoxColumn.EditingElementStyle>

                            </DataGridComboBoxColumn>
                            -->
                                <DataGridTextColumn Header="Commentaire" 
                                                Binding="{Binding MotifCommentaire}" 
                                                Width="1*" />
                            </DataGrid.Columns>
                        </DataGrid>


                        <!--
                            Visibility="{Binding IsDecisionJuryDefavorable, Converter={StaticResource BooleanToVisibilityConverter}}"  >
                        -->
                        <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" >
                            <Label  Content="Recours :" VerticalAlignment="Center"/>
                            <CheckBox x:Name="chkRecours" VerticalAlignment="Center" IsChecked="{Binding IsRecoursDemande}"/>
                            <Label VerticalAlignment="Center" Content="Date limite de depot :" Margin="10,0,0,0"/>
                            <DatePicker x:Name="dtpDateLimiteRecours" VerticalAlignment="Center" Width="100" DisplayDateStart="{Binding SelectedDate, ElementName=dtpDateJury}">
                                <DatePicker.BlackoutDates>
                                    <CalendarDateRange Start="2080-01-01"/>
                                </DatePicker.BlackoutDates>

                            </DatePicker>
                        </StackPanel>

                        <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="2" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=chkRecours}">
                            <StackPanel Orientation="Horizontal" >
                                <Label Width="169" VerticalAlignment="Center" Content="Date de dépôt du recours :"  />
                                <DatePicker x:Name="dtpDateDepotRecours" Width="125" VerticalAlignment="Center" DisplayDateStart="{Binding SelectedDate, ElementName=dtpDateJury}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal"/>
                        </StackPanel>
                        <StackPanel Grid.Row="4" Grid.Column="1" Orientation="Horizontal" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=chkRecours}">
                            <Label VerticalAlignment="Center" Content="Type de recours :"/>
                            <RadioButton x:Name="rbTypeRecoursGracieux" GroupName="TypeRecours" 
                                 IsChecked="{Binding TypeRecours, ConverterParameter={x:Static GestVAEcls:EnumTypeRecours.Gracieux}, Converter={StaticResource EnumToBoleanConverter}}" VerticalAlignment="Center"
                                 Content="Gracieux"
                                 />
                            <RadioButton x:Name="rbTypeRecoursContentieux" GroupName="TypeRecours" 
                                 IsChecked="{Binding TypeRecours, ConverterParameter={x:Static GestVAEcls:EnumTypeRecours.Contentieux}, Converter={StaticResource EnumToBoleanConverter}}" VerticalAlignment="Center"
                                 Content="Contentieux"
                                 />
                        </StackPanel>


                        <Grid x:Name="grdRecours" ShowGridLines="False" Grid.Row="5" Grid.Column="2" Grid.ColumnSpan="4" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=chkRecours}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0*" />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <!--                        
                    <RadioButton Content="Homme" Grid.Column="3" HorizontalAlignment="Left" Margin="20,0,0,0" VerticalAlignment="Top" Height="15" Width="85" IsChecked="{Binding TheCandidat.Sexe, Converter={StaticResource EnumToBoleanConverter}, ConverterParameter={x:Static GestVAEcls:Sexe.H}}"/>
                        <RadioButton Content="Femme" Grid.Column="3" HorizontalAlignment="Left" Margin="20,20,0,0" VerticalAlignment="Top" Height="21" Width="85" IsChecked="{Binding TheCandidat.Sexe, Converter={StaticResource EnumToBoleanConverter}, ConverterParameter={x:Static GestVAEcls:Sexe.F}}"/>
-->


                            <Label Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"  Content="Motif du recours :" />
                            <TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" x:Name="tbMotifRecours" HorizontalAlignment="Stretch" />


                            <Label Grid.Row="2" Grid.Column="0"  VerticalAlignment="Center" Content="Commentaire :" />
                            <TextBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" x:Name="tbMotifRecoursCommentaire" HorizontalAlignment="Stretch" />

                            <Label Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" Content="Décision du jury de recours :"/>
                            <ComboBox  Grid.Row="3" Grid.Column="1" x:Name="cbxDecisionRecours" Grid.ColumnSpan="2" Style="{DynamicResource ComboboxReadOnlyStyle}" />

                            <Label Grid.Row="4" Grid.Column="0" Content="Date notification du recours: " />
                            <DatePicker  Grid.Row="4" Grid.Column="1" x:Name="dtpDateNotificationJuryRecours" HorizontalAlignment="Left" Width="125" 
                                     DisplayDateStart="{Binding SelectedDate, ElementName=dtpDateJury}"/>
                        </Grid>


                    </Grid>

                </TabItem>
                <TabItem x:Name="tabEchanges" Header="Echanges" Margin="0" IsEnabled="False" >
                    <TabItem.Background>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FF8EAAC7" Offset="0"/>
                            <GradientStop Color="#FF0A7FCF" Offset="1"/>
                        </LinearGradientBrush>
                    </TabItem.Background>
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" IsEnabled="{Binding IsLivretModifiable}" >
                        <Label Content="Echanges :" Foreground="#FF0078D7"/>
                        <StackPanel Orientation="Horizontal" Background="AliceBlue" HorizontalAlignment="Stretch">
                            <DataGrid x:Name="dgEchanges"  ItemsSource="{Binding TheLivret.lstEchanges}" AutoGenerateColumns="False" SelectionMode="Single" CanUserResizeColumns="False" CanUserReorderColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserAddRows="False" Margin="10" RowHeaderWidth="0" HorizontalAlignment="Stretch" Width="744">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Date" Binding="{Binding DateEch, StringFormat=dd/MM/yyyy}" Width="1*"/>
                                    <DataGridTextColumn Header="Motif" Binding="{Binding MotifEch}" Width="*"/>
                                    <DataGridTextColumn Header="Echéance" Binding="{Binding DateEcheanceEch, StringFormat=dd/MM/yyyy}" Width="1*"/>
                                    <DataGridTextColumn Header="Réception" Binding="{Binding DateReceptionEch, StringFormat=dd/MM/yyyy}" Width="1*"/>
                                    <DataGridCheckBoxColumn Header="OK" Binding="{Binding IsOK}" Width="0.5*"/>
                                    <DataGridTextColumn Header="Commentaire" Binding="{Binding CommentaireEch}" Width="2*"/>
                                </DataGrid.Columns>

                            </DataGrid>
                            <Button x:Name="btnAddEchange" BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"  VerticalAlignment="Center" HorizontalAlignment="Right" Click="btnAddEchange_Click">
                                <Image Source="IMG/add.png" Margin="0,0,10,0"  />
                            </Button>

                        </StackPanel>
                    </StackPanel>

                </TabItem>
            </TabControl>
            <UniformGrid Grid.Row="4" >
                <Button x:Name="cbValider"  Margin="10"  IsCancel="True" Content="Valider et Quitter"
                    Command="{Binding DataContext.ValideretQuitterL1Command, ElementName=window}" Unloaded="cbValider_Unloaded" />

                <Button x:Name="cbQuitter" Margin="10" 
                    Command="{Binding DataContext.CloseCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:frmLivret1}}}" 
                    IsCancel="True" 
                    Content="Quitter" 
                    />

                <Button x:Name="dbCreerL2"  Margin="10"  IsCancel="True" Content="Clôturer et créer le Livret2" 
                    IsEnabled="{Binding IsLivretModifiable}"
                    Command="{Binding DataContext.CloturerL1etCreerL2Command, ElementName=window}" />
                <Button x:Name="cbDecloturerL1" Margin="10" 
                Command="{Binding DataContext.DecloturerLivretCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:frmLivret1}}}" 
                Content="Décloturer le Livret" 
                
                Visibility="{Binding IsLivretClos, Converter={StaticResource BooleanToVisibilityConverter}}">
                </Button>
            </UniformGrid>
            <!-- ECHANGE-->
            <!-- Jury-->
            <!--Recours -->

        </Grid>
    </ScrollViewer>
</Window>
