<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GestVAE"
        xmlns:localVM="clr-namespace:GestVAE.VM"
        xmlns:GestVAEcls="clr-namespace:GestVAEcls;assembly=GestVAEcls" xmlns:VM="clr-namespace:GestVAE.VM" xmlns:SampleDataSource="clr-namespace:Expression.Blend.SampleData.SampleDataSource" 
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" x:Name="window" x:Class="GestVAE.frmLivret1" 
        mc:Ignorable="d"
        Title="Gestion du Livret 1" Height="1062" Width="1063" Icon="IMG/LivretN.ico">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:EnumToBoleanConverter x:Key="EnumToBoleanConverter"/>

        <Image x:Key="AddIco" Source="IMG/Add.png"/>
    </Window.Resources>
    <Grid x:Name ="grdLivret" DataContext="{Binding CurrentCandidat.CurrentLivret}"  ShowGridLines="true"  >
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFD1EEF9" Offset="0"/>
                <GradientStop Color="#FF47565B" Offset="1"/>
            </LinearGradientBrush>
        </Grid.Background>
        <Grid.RowDefinitions>
            <!--Type-->
            <RowDefinition Height="Auto"/>
            <!-- généralité -->
            <RowDefinition Height="Auto"/>
            <!--Tab contol-->
            <RowDefinition Height="Auto"/>
            <!-- Bouttons -->
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TextBlock Text="LIVRET1" Grid.Row="0" FontSize="36" HorizontalAlignment="Center" >
            <TextBlock.Foreground>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}"/>
            </TextBlock.Foreground>
        </TextBlock>
        <Grid Grid.Row="1"  >
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="grdEntete2"  Grid.Row="0" Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Content="Numéro Livret :" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"/>
                <TextBox x:Name="tbNumLivret"  Grid.Row="0" Grid.Column="1" VerticalAlignment="Center"/>
                <Label Content="Etat Livret :" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"/>
                <ComboBox x:Name="cbxEtatLivret" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center"/>
                <Label Content="Diplome :" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"/>
                <TextBox x:Name="tbDiplome" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>

                <Label Content="Date Validité : "  Grid.Row="3" Grid.Column="0"  Visibility="{Binding Visibility, ElementName=dtpValidite}" VerticalContentAlignment="Center"/>
                <DatePicker x:Name="dtpValidite"   Grid.Row="3" Grid.Column="1" SelectedDate="{Binding DateValidite, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="29" 
                                Visibility="{Binding IsEtatAccepte, Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Left"/>

            </Grid>
            <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="1">
                <StackPanel Orientation="Horizontal" >
                    <Label Content="Date demande candidat :" Width="150"/>
                    <DatePicker x:Name="dtpDateDemande" 
                            SelectedDate="{Binding DateDemande}" 
                            Width="100" Height="29"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal"  Visibility="{Binding IsEtatDemande, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Label Content="Date limite envoi EHESP : " Width="150"/>
                    <DatePicker x:Name="dtpLimiteenvoiEHESP" 
                                SelectedDate="{Binding DateLimiteEnvoiEHESP}" 
                                Width="100" Height="29"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Visibility="{Binding IsEtatEnvoye, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Label Content="Date envoi EHESP : " Width="150" />
                    <DatePicker x:Name="dtpenvoiEHESP" SelectedDate="{Binding DateEnvoiEHESP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" Height="29" 
                                />
                </StackPanel>
                <StackPanel Orientation="Horizontal" Visibility="{Binding IsEtatEnvoye, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Label Content="Date limite récept. :" Width="150"  />
                    <DatePicker x:Name="dtpLimiteReceptEHESP" SelectedDate="{Binding DateLimiteReceptEHESP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" Height="29" />
                </StackPanel>


            </StackPanel>
            <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="2">
                <StackPanel Orientation="Horizontal" Visibility="{Binding IsEtatRecu, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Label Content="Date 1ere réception : " Width="150" />
                    <DatePicker x:Name="dtpReceptEHESP"  SelectedDate="{Binding DateReceptEHESP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" Height="29" 
                                />
                </StackPanel>
                <StackPanel Orientation="Horizontal" Visibility="{Binding IsEtatRecuComplet, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Label Content="Date réception complet : " Width="150" />
                    <DatePicker x:Name="dtpReceptComplet"  SelectedDate="{Binding DateReceptEHESPComplet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" Height="29"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Visibility="{Binding IsEtatRecuComplet, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Label Content="Date Limite Jury : " Width="150" />
                    <DatePicker x:Name="dtpLimiteJury"  SelectedDate="{Binding DateLimiteJury, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" Height="29" />
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="3">


            </StackPanel>


            <StackPanel Orientation="Vertical" VerticalAlignment="Center" Grid.Row="0" Grid.Column="1"/>
            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="3" />

        </Grid>

        <TabControl x:Name="TabL1" Grid.Row="2" 
                    IsEnabled="{Binding IsEtatNonFerme}" 
                    HorizontalAlignment="Stretch" Margin="10" >
            <TabItem x:Name="tabL1" Header="Livret1" Margin="0">
                <StackPanel Orientation="Vertical" >
                    <StackPanel Orientation="Horizontal" >
                        <RadioButton x:Name="rbcontrat" Content="Contrat" IsChecked="{Binding IsContrat}" GroupName="ContratLivret" Margin="10"/>
                        <RadioButton x:Name="rbconvention" Content="Convention" IsChecked="{Binding IsConvention}" GroupName="ContratLivret" Margin="10" HorizontalAlignment="Right"/>
                    </StackPanel>
                    <Grid x:Name="grdTypeOrigine" >
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>

                        <Label Content="Type demande :" Grid.Row="0" Grid.Column="0"/>
                        <ComboBox x:Name="cbxTypeDemande" Grid.Row="0" Grid.Column="1" 
                          SelectedItem="{Binding TheLivret.TypeDemande}" 
                          ItemsSource="{Binding LstTypeDemande}"/>

                        <Label Content="Origine demande :" Grid.Row="0" Grid.Column="2"/>
                        <ComboBox x:Name="cbxOrigineDemande" Grid.Row="0" Grid.Column="3"
                          SelectedItem="{Binding TheLivret.OrigineDemande}" 
                          ItemsSource="{Binding LstOrigineDemande}"/>

                    </Grid>


                    <StackPanel Orientation="Horizontal">
                        <Label Content="Pièces jointes :"/>
                        <TextBlock x:Name="tbPieceJointes" VerticalAlignment="Center" Foreground="{Binding ResultatPiecesJointesL1Color}"/>
                    </StackPanel>
                    <DataGrid x:Name="dgPiecesjointes" Background="#FFF90A0A" 
                                    ItemsSource="{Binding lstPieceJointe, UpdateSourceTrigger=PropertyChanged}" 
                                    SelectedItem="{Binding selectedPJ}"
                                    AutoGenerateColumns="False" SelectionMode="Single" CanUserResizeColumns="False" CanUserReorderColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserAddRows="False"
                                    Margin="10" RowHeaderWidth="0" 
                                    CellEditEnding="dgPiecesjointes_CellEditEnding" >
                        <DataGrid.Resources>
                            <VM:BindingProxy x:Key="proxy" Data="{Binding}" />
                        </DataGrid.Resources>
                        <DataGrid.InputBindings>
                            <KeyBinding Key="Delete" Command="{Binding VM.DeletePJL1Command, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:frmLivret1}}}" />
                        </DataGrid.InputBindings>

                        <DataGrid.Columns>
                            <DataGridComboBoxColumn Header="Catégorie" 
                                                        SelectedItemBinding="{Binding Categorie}" 
                                                        ItemsSource="{Binding Data.lstCategoriePJL1, Source={StaticResource proxy}}"
                                                        Width="3*"/>
                            <DataGridComboBoxColumn Header="Libellé" 
                                                        SelectedItemBinding="{Binding Libelle}" 
                                                        Width="3*">
                                <!-- How to bind a ComboboxCol to another(https://blogs.msdn.microsoft.com/vinsibal/2008/12/17/wpf-datagrid-dynamically-updating-datagridcomboboxcolumn/) -->
                                <DataGridComboBoxColumn.ElementStyle>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="ItemsSource" Value="{Binding lstLibellePJ}" />
                                    </Style>
                                </DataGridComboBoxColumn.ElementStyle>
                                <DataGridComboBoxColumn.EditingElementStyle>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="ItemsSource" Value="{Binding lstLibellePJ}" />
                                    </Style>
                                </DataGridComboBoxColumn.EditingElementStyle>

                            </DataGridComboBoxColumn>
                            <!--ItemsSource="{Binding Data.lstLibellePJL1 ,Source={StaticResource proxy}}"-->
                            <DataGridCheckBoxColumn Header="Recu" Binding="{Binding IsRecu}" Width="1*"/>
                            <DataGridCheckBoxColumn Header="OK" Binding="{Binding IsOK}" Width="1*"/>
                        </DataGrid.Columns>

                    </DataGrid>
                    <Button x:Name="btnAddPJ" BorderThickness="0"  Margin="10" Command="{Binding VM.AjoutePJL1Command, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:frmLivret1}}}" Content="Ajouter"/>

                </StackPanel>
            </TabItem>
            <TabItem x:Name="tabEchanges" Header="Echanges" Margin="0" >
                <TabItem.Background>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="#FF8EAAC7" Offset="0"/>
                        <GradientStop Color="#FF0A7FCF" Offset="1"/>
                    </LinearGradientBrush>
                </TabItem.Background>
                <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">
                    <Label Content="Echanges :" Foreground="#FF0078D7"/>
                    <StackPanel Orientation="Horizontal" Background="AliceBlue" HorizontalAlignment="Stretch">
                        <DataGrid x:Name="dgEchanges"  ItemsSource="{Binding TheLivret.lstEchanges}" AutoGenerateColumns="False" SelectionMode="Single" CanUserResizeColumns="False" CanUserReorderColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserAddRows="False" Margin="10" RowHeaderWidth="0" HorizontalAlignment="Stretch" Width="744">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Date" Binding="{Binding DateEch, StringFormat=dd/MM/yyyy}" Width="1*"/>
                                <DataGridTextColumn Header="Motif" Binding="{Binding MotifEch}" Width="*"/>
                                <DataGridTextColumn Header="Echéance" Binding="{Binding DateEcheanceEch, StringFormat=dd/MM/yyyy}" Width="1*"/>
                                <DataGridTextColumn Header="Réception" Binding="{Binding DateReceptionEch, StringFormat=dd/MM/yyyy}" Width="1*"/>
                                <DataGridCheckBoxColumn Header="OK" Binding="{Binding IsOK}" Width="0.5*"/>
                                <DataGridTextColumn Header="Commentaire" Binding="{Binding CommentaireEch}" Width="2*"/>
                            </DataGrid.Columns>

                        </DataGrid>
                        <Button x:Name="btnAddEchange" BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"  VerticalAlignment="Center" HorizontalAlignment="Right" Click="btnAddEchange_Click">
                            <Image Source="IMG/add.png" Margin="0,0,10,0"  />
                        </Button>

                    </StackPanel>
                </StackPanel>

            </TabItem>
            <TabItem x:Name="tabJury" Header="Jury" 
                    Visibility="{Binding IsEtatRecuComplet, Converter={StaticResource BooleanToVisibilityConverter}}"
                     >
                    <Grid x:Name="grdJury1"  ShowGridLines="False" HorizontalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center">
                            <Label Content="Date :" VerticalAlignment="Center"/>
                            <DatePicker x:Name="dtpDateJury" Margin="0" VerticalAlignment="Center"  />
                        </StackPanel>
                        <Grid Grid.Row="0" Grid.Column="1" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="3*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.ColumnSpan="2">
                                <Label  Content="Heure jury :" VerticalAlignment="Center" />
                                <xctk:TimePicker Name="tpHeureJury" Margin="10" TimeInterval="0:30:0" ShowButtonSpinner="False" VerticalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal"  Grid.Column="2">
                                <Label Content="Heure convocation :" VerticalAlignment="Center" />
                                <xctk:TimePicker Name="tpHeureConvoc" Margin="10" ShowButtonSpinner="False" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Grid>
                            <Grid  Grid.Row="0" Grid.Column="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="5*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Label Content="Lieu :" Grid.Column="0" VerticalAlignment="Center"/>
                                <TextBox x:Name="tbLieuJury"  Grid.Column="1" VerticalAlignment="Center" Margin="0,0,9,0"  />

                            </Grid>

                        <Label Grid.Row="1" Grid.Column="0" Margin="10,8,0,8" VerticalAlignment="Center" Content="Décision :" Height="26"/>
                        <ComboBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" x:Name="cbxDecision" HorizontalAlignment="Stretch" Margin="10"/>
                        <Label Grid.Row="2" Grid.Column="0" Margin="10,8,0,8" VerticalAlignment="Center" Content="Motif général :" Height="26"/>
                        <ComboBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" x:Name="cbxMotifGeneral" HorizontalAlignment="Stretch" Margin="10" 
                                  ItemsSource="{Binding VM.lstMotifGL1, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:frmLivret1}}}"
                                  DisplayMemberPath="Libelle"
                                  SelectedValuePath="Libelle"
                                  SelectedValue="{Binding MotifGeneralJury}"
                                  />
                        <Label Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" Margin="10,10,0,10" Content="Motif détaillé :" Height="26"/>
                        <StackPanel Orientation="Vertical" Grid.Row="3" Grid.Column="1"  Grid.ColumnSpan="2">
                            <ComboBox  x:Name="cbxMotifDetaille" HorizontalAlignment="Stretch" Margin="10,10,10,14" 
                                  ItemsSource="{Binding SelectedItem.lstMotifDetaille, ElementName=cbxMotifGeneral}"
                                  DisplayMemberPath="Libelle"
                                  SelectedValuePath="Libelle"
                                  SelectedValue="{Binding MotifDetailJury}"
                                  />
                        </StackPanel>
                        <Label Grid.Row="4" Grid.Column="0" Margin="12,8,0,8" VerticalAlignment="Center" Content="Commentaire :" Height="26"/>
                        <TextBox Grid.Row="4" Grid.Column="1 " Grid.ColumnSpan="2" x:Name="tbCommentaire" HorizontalAlignment="Stretch" Margin="10"/>
                        <StackPanel Orientation="Horizontal" Grid.Row="5" Grid.Column="0" 
                                    Visibility="{Binding IsDecisionJuryDefavorable, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Label  Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Recours :"/>
                                <CheckBox x:Name="chkRecours" Margin="10" VerticalAlignment="Center" IsChecked="True"/>
                                <Label VerticalAlignment="Center" Content="  Date limite :"/>
                                <DatePicker x:Name="dtpDateLimiteRecours" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10" Width="100"
                                      />
                            </StackPanel>


                        <StackPanel Grid.Row="5" Grid.Column="1" Orientation="Horizontal" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=chkRecours}">
                            <Label Width="100" VerticalAlignment="Center" Margin="10" Content="Date de dépôt :"  />
                            <DatePicker x:Name="dtpDateDepotRecours" Margin="10" Width="125" VerticalAlignment="Center"/>
                        </StackPanel>

                        <StackPanel Grid.Row="5" Grid.Column="2" Orientation="Horizontal" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=chkRecours}">
                            <Label VerticalAlignment="Center" Content="Type de recours :"/>
                            <RadioButton x:Name="rbTypeRecoursGracieux" GroupName="TypeRecours" 
                                 IsChecked="{Binding TypeRecours, ConverterParameter={x:Static GestVAEcls:EnumTypeRecours.Gracieux}, Converter={StaticResource EnumToBoleanConverter}}" VerticalAlignment="Center"
                                 Content="Gracieux"
                                 />
                            <RadioButton x:Name="rbTypeRecoursContentieux" GroupName="TypeRecours" 
                                 IsChecked="{Binding TypeRecours, ConverterParameter={x:Static GestVAEcls:EnumTypeRecours.Contentieux}, Converter={StaticResource EnumToBoleanConverter}}" VerticalAlignment="Center"
                                 Content="Contentieux"
                                 />
                        </StackPanel>


                        <Grid x:Name="grdRecours" ShowGridLines="False" Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="3" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=chkRecours}" Grid.RowSpan="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <!--                        
                    <RadioButton Content="Homme" Grid.Column="3" HorizontalAlignment="Left" Margin="20,0,0,0" VerticalAlignment="Top" Height="15" Width="85" IsChecked="{Binding TheCandidat.Sexe, Converter={StaticResource EnumToBoleanConverter}, ConverterParameter={x:Static GestVAEcls:Sexe.H}}"/>
                        <RadioButton Content="Femme" Grid.Column="3" HorizontalAlignment="Left" Margin="20,20,0,0" VerticalAlignment="Top" Height="21" Width="85" IsChecked="{Binding TheCandidat.Sexe, Converter={StaticResource EnumToBoleanConverter}, ConverterParameter={x:Static GestVAEcls:Sexe.F}}"/>
-->


                            <Label Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="10" Content="Motif du recours :" />
                            <ComboBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" x:Name="cbxMotifRecours" HorizontalAlignment="Stretch" Margin="10"/>


                            <Label Grid.Row="2" Grid.Column="0" Margin="10" VerticalAlignment="Center" Content="Commentaire :" />
                            <TextBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" x:Name="tbMotifRecoursCommentaire" HorizontalAlignment="Stretch" Margin="10"/>

                            <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="0">
                                <Label Width="100" VerticalAlignment="Center" Margin="10" Content="Date d'examen:" />
                            </StackPanel>
                            <DatePicker  Grid.Row="3" Grid.Column="1" x:Name="dtpDateJuryRecours" HorizontalAlignment="Left" Margin="10" Width="125"/>

                            <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="2">
                                <Label VerticalAlignment="Center" Content="Lieu:" />
                                <TextBox x:Name="tbLieuJuryRecours" HorizontalAlignment="Left" Width="207" Margin="10"/>
                            </StackPanel>

                            <Label Grid.Row="4" Grid.Column="0" VerticalAlignment="Center" Margin="10" Content="Décision:"/>
                        <ComboBox  Grid.Row="4" Grid.Column="1" x:Name="cbxDecisionRecours" Grid.ColumnSpan="2" Margin="10"></ComboBox>

                            <Label Grid.Row="5" Grid.Column="0" VerticalAlignment="Center" Margin="10" Content="Motif général:"/>
                            <ComboBox Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2" x:Name="cbxMotifGeneralRecours" HorizontalAlignment="Stretch" Margin="10"
                                  ItemsSource="{Binding VM.lstMotifGL1, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:frmLivret1}}}"
                                  DisplayMemberPath="Libelle"
                                  SelectedValuePath="Libelle"
                                  SelectedValue="{Binding MotifGeneralJuryRecours}"/>
                            <Label Grid.Row="6" Grid.Column="0" VerticalAlignment="Center" Margin="10" Content="Motif Détaillé:" />
                            <ComboBox Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="2" x:Name="cbxMotifDetailleRecours" HorizontalAlignment="Stretch" Margin="10"
                                    ItemsSource="{Binding SelectedItem.lstMotifDetaille, ElementName=cbxMotifGeneralRecours}"
                                    DisplayMemberPath="Libelle"
                                    SelectedValuePath="Libelle"
                                    SelectedValue="{Binding MotifDetailJuryRecours}"
/>
                            <Label Grid.Row="7" Grid.Column="0" VerticalAlignment="Center" Margin="10" Content="Commentaire:" />
                            <TextBox Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="2" x:Name="tbCommentaireRecours" HorizontalAlignment="Stretch" Margin="10" />

                        </Grid>


                    </Grid>

            </TabItem>
        </TabControl>
        <UniformGrid Grid.Row="3" >
            <Button x:Name="dbCreerL2"  Margin="10" Click="dbCreerL2_Click" Style="{DynamicResource StyleBtn}" IsCancel="True" Content="Valider et créer le Livret2"/>
            <Button x:Name="cbValider"  Margin="10" Command="{Binding DataContext.ValideretQuitterL1Command, ElementName=window}" Style="{DynamicResource StyleBtn}" IsCancel="True" Content="Valider et Quitter"/>
            <Button x:Name="cbQuitter" Margin="10" Command="{Binding DataContext.CloseCommand, ElementName=window}" Style="{DynamicResource StyleBtn}" IsCancel="True" Content="Quitter"/>
        </UniformGrid>
        <!-- ECHANGE-->
        <!-- Jury-->
        <!--Recours -->

    </Grid>
</Window>
